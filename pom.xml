<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>ca.mikegabelmann.maven</groupId>
        <artifactId>parent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>ca.mikegabelmann.db</groupId>
    <artifactId>codegen</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>codegen</name>
    <description>
        'Reveng' short for Reverse Engineering.
        Similar to Hibernate Tools, this library will generate Java source code from an existing database or
        SQL scripts. It uses ANTLR, JAXB and some other tools to output Java classes that enable you to quickly
        get a JPA layer working.
    </description>

    <scm>
        <connection>scm:git:https://github.com/mgabelmann/codegen.git</connection>
        <developerConnection>scm:git:https://github.com/mgabelmann/codegen.git</developerConnection>
        <url>https://github.com/mgabelmann/codegen</url>
    </scm>

    <properties>
        <antlr.version>4.13.1</antlr.version>
        <spotbugs-maven-plugin.version>4.8.6.2</spotbugs-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>${antlr.version}</version>
            <scope>compile</scope>
        </dependency>

        <!-- useful annotations for validation -->
        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <version>24.1.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- old library
        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>javax.persistence-api</artifactId>
            <version>2.2</version>
            <scope>compile</scope>
        </dependency>-->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>3.2.0</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>2.3.32</version>
            <scope>compile</scope>
        </dependency>

        <!-- JAXB -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <version>4.0.2</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>4.0.5</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>5.10.3</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- generate ANTLR java files -->
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>${antlr.version}</version>
                <configuration>
                    <!--<sourceDirectory>${basedir}/src/main/antlr4</sourceDirectory>-->
                    <visitor>false</visitor>
                    <listener>true</listener>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- generate JAXB java files from XSD files -->
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-xjc-plugin</artifactId>
                <version>4.0.1</version>
                <configuration>
                    <extensions>
                        <extension>org.apache.cxf.xjcplugins:cxf-xjc-dv:4.0.1</extension>
                    </extensions>
                </configuration>
                <executions>
                    <execution>
                        <id>xjc-1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>xsdtojava</goal>
                        </goals>
                        <configuration>
                            <sourceRoot>${basedir}/target/generated-sources/jaxb</sourceRoot>
                            <xsdOptions>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/xsd/hibernate-reverse-engineering-3.0.xsd</xsd>
                                    <packagename>org.hibernate.reveng</packagename>
                                </xsdOption>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/xsd/hibernate-mapping-3.0.xsd</xsd>
                                    <packagename>org.hibernate.mapping</packagename>
                                </xsdOption>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/xsd/apache-torque-5.0.xsd</xsd>
                                    <packagename>org.apache.torque</packagename>
                                </xsdOption>
                                <xsdOption>
                                    <xsd>${basedir}/src/main/xsd/dbmapping.xsd</xsd>
                                    <packagename>ca.mikegabelmann.db.mapping</packagename>
                                </xsdOption>
                            </xsdOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- NOTE: previous versions of cxf-xjc-plugin generated with javax.xml.bind instead of
                       jakarta.xml.bind, so we used following plugin to search and replace. might be
                       useful to keep example
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        &lt;!&ndash; NOTE: classes are generated with the wrong JAXB package &ndash;&gt;
                        <id>ant-1</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <replace token="javax.xml.bind" value="jakarta.xml.bind" dir="target/generated/src/main/java/">
                                    <include name="**/*.java"/>
                                </replace>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            -->

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>ca/mikegabelmann/db/antlr/**/*</exclude>
                        <exclude>org/apache/torque/**/*</exclude>
                        <exclude>org/hibernate/**/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <excludeFilterFile>ignore.xml</excludeFilterFile>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>ca/mikegabelmann/db/antlr/**/*</exclude>
                        <exclude>org/apache/torque/**/*</exclude>
                        <exclude>org/hibernate/**/*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <excludeFilterFile>ignore.xml</excludeFilterFile>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
</project>