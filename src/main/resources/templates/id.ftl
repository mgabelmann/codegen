<#assign classbody>

<#if javadoc>
/**
 * <p>Composite ID for <em>${tableName}</em>.</p>
 * <p><b>NOTE:</b>if this class is re-generated any changes will be lost.</p>
 *
 * @author ${author}
 * @version ${version}
 * @see ${keyWrapper.packageName}.${tableSimpleName}
 */
</#if>
@${keyWrapper.addTypedImport("javax.annotation.processing.Generated")}(
    value = "${author}",
    date = "${buildDtm}",
    comments = "This code was generated by tools for use with Java applications using Hibernate and Spring Data."
)
@${keyWrapper.addTypedImport("jakarta.persistence.Embeddable")}
public class ${keyWrapper.getSimpleName()} implements ${keyWrapper.addTypedImport("java.io.Serializable")}  {
    /** UID. */
    @${keyWrapper.addTypedImport("java.io.Serial")}
    private static final long serialVersionUID = 1L;

    //PROPERTIES
<#list keyWrapper.getColumnValues() as column>
    <#if javadoc></#if>
    ${Id.field(column)}

</#list>

    //CONSTRUCTORS
    <#if javadoc>/** Default constructor. Required by JPA. */</#if>
    ${Id.constructorNoArgs(keyWrapper)}

    <#if javadoc>/** Required args constructor. */</#if>
    ${Id.constructorArgs(keyWrapper)}

    //GETTERS & SETTERS
<#list keyWrapper.getColumnValues() as column>
    ${Id.setter(column)}

    ${Id.getter(column)}

</#list>

    //OBJECT overrides
    ${Id.toStringGenerator(keyWrapper)}

    ${Id.equalsGenerator(keyWrapper)}

    ${Id.hashCodeGenerator(keyWrapper)}

}
</#assign>

${Id.printPackage(keyWrapper)}

${Id.printImports(keyWrapper)}

${classbody}