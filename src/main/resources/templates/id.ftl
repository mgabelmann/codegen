package ${basePackagePath}.model;

import javax.annotation.processing.Generated;

import jakarta.persistence.*;

//TODO: import special types like LocalDate, LocalDateTime, Instant, etc.
//FIXME: don't use * imports!

<#if javadoc>
/**
 * <p>Composite ID for <em>${tableEntity}</em>.</p>
 * <p><b>NOTE:</b>if this class is re-generated any changes will be lost.</p>
 *
 * @author ${author}
 * @version ${version}
 * @see ${basePackagePath}.model.${tableName}
 */
</#if>
@Generated(
    value = "${author}",
    date = "${buildDtm}",
    comments = "This code was generated by tools for use with Java applications using Hibernate and Spring Data."
)
@Embeddable
public class ${tableIdName} implements Serializable {
    /** UID. */
    private static final long serialVersionUID = 1L;

    //PROPERTIES
<#list id.getColumns() as column>
    <#if javadoc></#if>
    ${Entity.field(column)}

</#list>

    //CONSTRUCTORS
<#if javadoc>/** Default constructor. */</#if>
${Entity.constructorNoArgs(tableWrapper)}

<#if javadoc>/** Required args constructor. */</#if>
${Entity.constructorArgs(tableWrapper, false)}

//GETTERS & SETTERS
<#list tableWrapper.getColumns() as column>
    ${Entity.setter(column)}

    ${Entity.getter(column)}

</#list>

//TODO: toString
//TODO: hashCode
//TODO: equals

}
