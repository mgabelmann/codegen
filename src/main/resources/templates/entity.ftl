package ${basePackagePath}.model;

import javax.annotation.Generated;
import javax.persistence.Column;
import javax.persistence.Entity;
<#if tableWrapper.getLocalKey().isCompositeKey()>
    import javax.persistence.EmbeddedId;
<#else>
    import javax.persistence.Id;
</#if>
import javax.persistence.Table;

//TODO: import @Temporal, @JoinColumn, @JoinColumns,
//TODO: import special types like LocalDate, LocalDateTime, Instant, etc.


<#if javadoc>
/**
 * <p>Entity for <em>${tableWrapper.tableType.name}</em>.</p>
 * <p><b>NOTE:</b>if this class is re-generated any changes will be lost, extend this class if you wish to
 * add functionality</p>
 *
 * @author ${author}
 * @version ${version}
 * @see ${basePackagePath}.model.${tableWrapper.getSimpleName()}
 */
</#if>
@Generated(
    value = "${author}",
    date = "${buildDtm}",
    comments = "This code was generated by tools for use with Java applications using Hibernate and Spring Data."
)
@Entity
${Entity.annotation(Entity.getTableAnnotation(tableWrapper, schema))}
public class ${tableWrapper.getSimpleName()} {
    /** UID. */
    private static final long serialVersionUID = 1L;

    //PROPERTIES
<#list tableWrapper.getColumns() as column>
    <#if javadoc></#if>
    ${Entity.field(column)}

</#list>

    //CONSTRUCTORS
    <#if javadoc>/** Default constructor. */</#if>
    ${Entity.constructorNoArgs(tableWrapper)}

    <#if javadoc>/** Required args constructor. */</#if>
    ${Entity.constructorArgs(tableWrapper, false)}

    <#if javadoc>/** All args constructor. */</#if>
    ${Entity.constructorArgs(tableWrapper, true)}

    //GETTERS & SETTERS
<#list tableWrapper.getColumns() as column>
    ${Entity.setter(column)}

    ${Entity.getter(column)}

</#list>

    //TODO: toString
    //TODO: hashCode
    //TODO: equals

}
